#configurar

    git config --global user.name "nome" -----> cria usuário
    git config --global user.email "email" -----> seta o emaildo usuário
    git config --global core.editor nomeeditor -----> seta o editor

    git config --list -----> retorna todas as configurações realizadas
    git config user.name -----> retorna o nome cadastrado
    git config user.email -----> retorna o email cadastrado
    git config core.editor -----> retorna o editor setado

#comandos básicos

    git init -----> inicia o git na pasta criando o .git
    git add comando -----> (.) ou (-A) adiciona o repositorio para monitoramento do git.
                           (nome) adiciona só o arquivo
    git commit -m "comentario" -----> comita o reposítório criando ou modificando a versão.
    git log -----> mostra o log de ocorrencias
    git status -----> mostra o que tem pra fazer

#branch

    git branch --list -----> mostra a lista de brunch
    git branch nome -----> cria um novo branch
    git checkout nomebranch -----> muda o branch   
    git branch -D nome -----> deleta um branch
    git branch -M oldnome newnome -----> renomeia o branch
    git branch -C oldnome newnome -----> copia o branch para outro branch

#reset

    git reset --tipo codigocommit -----> (hard) volta ao commit desejado, deletando todas as modificações.
                                         (soft) volta ao commit desejado porém ao momento antes do commit, mantendo arquivos e modificações não commitadas.
                                         (mixed) volta o commit desejado porém os arquivos antes do add.

#diff  

    git diff -----> mostra o que foi alterado desde o ultimo commit antes de add.
    git diff --name-only -----> mostra apenas o nome do arquivo que foi modificado.
    git checkout HEAD -- nomearquivo -----> apaga mudanças realizadas no arquivo antes de add.

#remote
    
    //é criado uma referencia ao repositório na máquina.
    git remote add nome("normalmente origin") git@github.com:usuario/repositorio.git -----> cria um add remote que vai para o repositorio via ssh
    git remote add nome("normalmente origin") https://github.com/usuario/repositorio.git -----> cria um add remote que vai para o repositorio via autenticação de duas etapas
    git remote -----> visualiza os branchs
    git remote -v -----> visualiza os branchs com detalhes
    
    git push -u nomeadd nomebranch -----> envia o branch selecionado no nomebranch do nomeadd para repositorio remoto
    git push nomeadd nomebranch -----> para ficar recommitando no github
    
#revert
    
    git revert --no-edit codigoDoCommit -----> cria um commit de revert que reverte o commit anterior, porém sem apagá-lo, só editando os arquivos.

#remover branch remoto

    git push nomeorigin :nomebranch -----> remove branch remoto, ( : ) deleta qualquer coisa do remoto.
    
#pull

    git pull nomerepositorio nomebranchdestino -----> puxa as atualizações do repositorio remoto para o repositorio git local.

#clone

    git clone URL -----> cria uma cópia do repositorio no git local.
    //projetos clonados de outra pessoa não permite push, apenas commit local.
    
#fork -----> contribuindo com outros projetos
    
    // Ao clicar em fork no github cria-se um projeto identico ao original porém no seu usuário.
    // neste projeto forkado pode ser realizado pushs
    // para levar as alterações para o projeto original clicar em --new pull request--
    // clica em --create pull request-- comenta e argumenta, e clica novamente em --create pull request--
    // isso irá ser avaliado pelo dono original que se aceito irá commitar ao projeto original
    
    
    
    









